# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files
[metadata]
name = wafo
summary = Wave Analysis for Fatigue and Oceanography
author = WAFO-group
author-email = none
license = GPLv3
license_file = LICENSE.txt
home-page = http://www.maths.lth.se/matstat/wafo/
description-file = README.rst
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = Development Status :: 4 - Beta,
              Programming Language :: Python,
              Programming Language :: Python :: 2.7,
              Programming Language :: Python :: 3.5,
              Programming Language :: Python :: 3.6,
              Programming Language :: Python :: 3.7,
              Environment :: Console,
              Intended Audience :: Education,
              Intended Audience :: Science/Research,
              License :: OSI Approved :: GPL License,
              Operating System :: OS Independent,
              Operating System :: POSIX :: Linux,
              Operating System :: Unix,
              Operating System :: MacOS,
              Operating System :: Microsoft :: Windows
              Topic :: Scientific/Engineering :: Mathematics

[options]
zip_safe = False
include_package_data = True
# src layout:
package_dir =
     =src
packages = find:

[options.packages.find]
where = src

[test]
# py.test options when running `python setup.py test`
addopts =
  src/wafo
  src/wafo/spectrum
  src/wafo/transform
  src/wafo/covariance
  src/wafo/wave_theory
  src/wafo/tests
  src/wafo/covariance/tests
  src/wafo/spectrum/tests
  src/wafo/covariance/tests
  src/wafo/transform/tests
  src/wafo/wave_theory/tests
# src/wafo/stats/tests

[tool:pytest]
doctest_optionflags = NORMALIZE_WHITESPACE ELLIPSIS
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
     -rsxXf
#    --cov wafo --cov-report term-missing
#    --verbose
#    --doctest-modules
#    --pep8

norecursedirs =
    .*
    build
    docs
    tmp*
    source
    stats  # postpone testing of stats

pep8ignore =
    W503
    info.py ALL
    conftest.py ALL
    tests/*.py ALL
    MSO.py ALL
    MSPPT.py ALL

pep8maxlinelength = 100

[aliases]
docs = build_sphinx
test = pytest

[bdist_wheel]
# Use this option if your package is pure-python
universal = 0

[build_sphinx]
source_dir = docs
build_dir = docs/_build


[devpi:upload]
# Options for the devpi: PyPI serer and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
format =
    bdist_wheel
    sdist
